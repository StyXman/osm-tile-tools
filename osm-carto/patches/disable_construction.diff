--- a/project.yaml
+++ b/project.yaml
@@ -149,7 +149,7 @@
               ('landuse_' || (CASE WHEN landuse IN ('quarry', 'vineyard', 'orchard', 'cemetery', 'residential', 'garages', 'meadow', 'grass', 
                                                     'allotments', 'forest', 'farmyard', 'farm', 'farmland', 'greenhouse_horticulture', 
                                                     'recreation_ground', 'village_green', 'retail', 'industrial', 'railway', 'commercial', 
-                                                    'brownfield', 'landfill', 'construction') THEN landuse ELSE NULL END)) AS landuse,
+                                                    'brownfield', 'landfill') THEN landuse ELSE NULL END)) AS landuse,
               ('leisure_' || (CASE WHEN leisure IN ('swimming_pool', 'playground', 'park', 'recreation_ground', 'common', 'garden', 
                                                     'golf_course', 'miniature_golf', 'picnic_table', 'sports_centre', 'stadium', 'pitch', 
                                                     'track', 'dog_park') THEN leisure ELSE NULL END)) AS leisure,
@@ -498,7 +498,7 @@
       # an order is generated in SQL.
       table: |-
         (SELECT way, (CASE WHEN substr(feature, length(feature)-3, 4) = 'link' THEN substr(feature, 0, length(feature)-4) ELSE feature END) AS feature,
-                horse, foot, bicycle, tracktype, int_surface, access, construction,
+                horse, foot, bicycle, tracktype, int_surface, access,
                 service, oneway, link, layernotnull
           FROM ( -- subselect that contains both roads and rail/aero
             SELECT
@@ -518,7 +518,6 @@
                   WHEN access IN ('no', 'private') THEN 'no'::text
                   ELSE NULL
                 END AS access,
-                construction,
                 CASE
                   WHEN service IN ('parking_aisle', 'drive-through', 'driveway') THEN 'INT-minor'::text
                   ELSE 'INT-normal'::text
@@ -555,7 +554,6 @@
                   WHEN access IN ('no', 'private') THEN 'no'::text
                   ELSE NULL
                 END AS access,
-                construction,
                 CASE WHEN service IN ('parking_aisle', 'drive-through', 'driveway') THEN 'INT-minor'::text ELSE 'INT-normal'::text END AS service,
                 NULL AS oneway,
                 'no' AS link,
@@ -579,7 +577,6 @@
               ('railway_tram', 410),
               ('railway_tram-service', 405),
               ('railway_disused', 400),
-              ('railway_construction', 400),
               ('highway_motorway', 380),
               ('highway_trunk', 370),
               ('highway_primary', 360),
@@ -606,8 +603,7 @@
               ('highway_platform', 90),
               ('railway_platform', 90),
               ('aeroway_runway', 60),
-              ('aeroway_taxiway', 50),
-              ('highway_construction', 10)
+              ('aeroway_taxiway', 50)
             ) AS ordertable (feature, prio)
             USING (feature)
           ORDER BY
@@ -783,7 +779,7 @@
       <<: *osm2pgsql
       table: |-
         (SELECT way, (CASE WHEN substr(feature, length(feature)-3, 4) = 'link' THEN substr(feature, 0, length(feature)-4) ELSE feature END) AS feature,
-                horse, foot, bicycle, tracktype, int_surface, access, construction,
+                horse, foot, bicycle, tracktype, int_surface, access,
                 service, oneway, link, layernotnull
           FROM ( -- subselect that contains both roads and rail/aero
             SELECT
@@ -803,7 +799,6 @@
                   WHEN access IN ('no', 'private') THEN 'no'::text
                   ELSE NULL
                 END AS access,
-                construction,
                 CASE
                   WHEN service IN ('parking_aisle', 'drive-through', 'driveway') THEN 'INT-minor'::text
                   ELSE 'INT-normal'::text
@@ -842,7 +837,6 @@
                   WHEN access IN ('no', 'private') THEN 'no'::text
                   ELSE NULL
                 END AS access,
-                construction,
                 CASE WHEN service IN ('parking_aisle', 'drive-through', 'driveway') THEN 'INT-minor'::text ELSE 'INT-normal'::text END AS service,
                 NULL AS oneway,
                 'no' AS link,
@@ -868,7 +862,6 @@
               ('railway_tram', 410),
               ('railway_tram-service', 405),
               ('railway_disused', 400),
-              ('railway_construction', 400),
               ('highway_motorway', 380),
               ('highway_trunk', 370),
               ('highway_primary', 360),
@@ -895,8 +888,7 @@
               ('highway_platform', 90),
               ('railway_platform', 90),
               ('aeroway_runway', 60),
-              ('aeroway_taxiway', 50),
-              ('highway_construction', 10)
+              ('aeroway_taxiway', 50)
             ) AS ordertable (feature, prio)
             USING (feature)
           ORDER BY
@@ -955,7 +947,6 @@
             tracktype,
             int_surface,
             access,
-            construction,
             service,
             oneway,
             link,
@@ -978,7 +969,6 @@
                   WHEN access IN ('no', 'private') THEN 'no'::text
                   ELSE NULL
                 END AS access,
-                construction,
                 CASE
                   WHEN service IN ('parking_aisle', 'drive-through', 'driveway') THEN 'INT-minor'::text
                   ELSE 'INT-normal'::text
@@ -1017,7 +1007,6 @@
                   WHEN access IN ('no', 'private') THEN 'no'::text
                   ELSE NULL
                 END AS access,
-                construction,
                 CASE WHEN service IN ('parking_aisle', 'drive-through', 'driveway') THEN 'INT-minor'::text ELSE 'INT-normal'::text END AS service,
                 NULL AS oneway,
                 'no' AS link,
@@ -1043,7 +1032,6 @@
               ('railway_tram', 410),
               ('railway_tram-service', 405),
               ('railway_disused', 400),
-              ('railway_construction', 400),
               ('highway_motorway', 380),
               ('highway_trunk', 370),
               ('highway_primary', 360),
@@ -1070,8 +1058,7 @@
               ('highway_platform', 90),
               ('railway_platform', 90),
               ('aeroway_runway', 60),
-              ('aeroway_taxiway', 50),
-              ('highway_construction', 10)
+              ('aeroway_taxiway', 50)
             ) AS ordertable (feature, prio)
             USING (feature)
           ORDER BY
@@ -1196,7 +1183,7 @@
       <<: *osm2pgsql
       table: |-
         (SELECT way, (CASE WHEN substr(feature, length(feature)-3, 4) = 'link' THEN substr(feature, 0, length(feature)-4) ELSE feature END) AS feature,
-                horse, foot, bicycle, tracktype, int_surface, access, construction,
+                horse, foot, bicycle, tracktype, int_surface, access,
                 service, oneway, link, layernotnull
           FROM ( -- subselect that contains both roads and rail/aero
             SELECT
@@ -1216,7 +1203,6 @@
                   WHEN access IN ('no', 'private') THEN 'no'::text
                   ELSE NULL
                 END AS access,
-                construction,
                 CASE
                   WHEN service IN ('parking_aisle', 'drive-through', 'driveway') THEN 'INT-minor'::text
                   ELSE 'INT-normal'::text
@@ -1253,7 +1239,6 @@
                   WHEN access IN ('no', 'private') THEN 'no'::text
                   ELSE NULL
                 END AS access,
-                construction,
                 CASE WHEN service IN ('parking_aisle', 'drive-through', 'driveway') THEN 'INT-minor'::text ELSE 'INT-normal'::text END AS service,
                 NULL AS oneway,
                 'no' AS link,
@@ -1277,7 +1262,6 @@
               ('railway_tram', 410),
               ('railway_tram-service', 405),
               ('railway_disused', 400),
-              ('railway_construction', 400),
               ('highway_motorway', 380),
               ('highway_trunk', 370),
               ('highway_primary', 360),
@@ -1304,8 +1288,7 @@
               ('highway_platform', 90),
               ('railway_platform', 90),
               ('aeroway_runway', 60),
-              ('aeroway_taxiway', 50),
-              ('highway_construction', 10)
+              ('aeroway_taxiway', 50)
             ) AS ordertable (feature, prio)
             USING (feature)
           ORDER BY
@@ -1884,11 +1867,10 @@
         (SELECT way,
             CASE WHEN substr(highway, length(highway)-3, 4) = 'link' THEN substr(highway, 0, length(highway)-4) ELSE highway END,
             CASE WHEN (tunnel = 'yes' OR tunnel = 'building_passage' OR covered = 'yes') THEN 'yes' ELSE 'no' END AS tunnel,
-            CASE WHEN construction IN ('service', 'footway', 'cycleway', 'bridleway', 'path', 'track') THEN 'yes' ELSE 'no' END AS int_construction_minor,
             name
           FROM planet_osm_line
           WHERE highway IN ('motorway', 'motorway_link', 'trunk', 'trunk_link', 'primary', 'primary_link', 'secondary', 'secondary_link', 'tertiary', 
-                            'tertiary_link', 'residential', 'unclassified', 'road', 'service', 'pedestrian', 'raceway', 'living_street', 'construction')
+                            'tertiary_link', 'residential', 'unclassified', 'road', 'service', 'pedestrian', 'raceway', 'living_street')
             AND name IS NOT NULL
         ) AS roads_text_name
     properties:
@@ -1999,7 +1981,7 @@
               'landuse_' || CASE WHEN landuse IN ('reservoir', 'basin', 'recreation_ground', 'village_green', 'quarry', 'vineyard', 'orchard', 'cemetery', 
                                                   'residential', 'garages', 'meadow', 'grass', 'allotments', 'forest', 'farmyard', 'farm', 'farmland', 
                                                   'greenhouse_horticulture', 'retail', 'industrial', 'railway', 'commercial', 'brownfield', 'landfill', 
-                                                  'construction', 'military') THEN landuse ELSE NULL END,
+                                                  'military') THEN landuse ELSE NULL END,
               'man_made_' || CASE WHEN man_made IN ('lighthouse', 'windmill', 'mast', 'water_tower', 'pier', 'breakwater', 'groyne', 'obelisk') THEN man_made ELSE NULL END,
               'natural_' || CASE WHEN "natural" IN ('wood', 'water', 'mud', 'wetland', 'marsh', 'bay', 'spring', 'scree', 'shingle', 'bare_rock', 'sand', 'heath', 
                                                     'grassland', 'scrub', 'beach', 'shoal', 'reef', 'glacier') THEN "natural" ELSE NULL END,
@@ -2142,7 +2124,7 @@
                   'landuse_' || CASE WHEN landuse IN ('reservoir', 'basin', 'recreation_ground', 'village_green', 'quarry', 'vineyard', 'orchard', 'cemetery', 
                                                       'residential', 'garages', 'meadow', 'grass', 'allotments', 'forest', 'farmyard', 'farm', 'farmland', 
                                                       'greenhouse_horticulture', 'retail', 'industrial', 'railway', 'commercial', 'brownfield', 'landfill', 
-                                                      'construction', 'military') THEN landuse ELSE NULL END,
+                                                      'military') THEN landuse ELSE NULL END,
                   'man_made_' || CASE WHEN man_made IN ('lighthouse', 'windmill', 'mast', 'water_tower', 'obelisk') THEN man_made ELSE NULL END,
                   'natural_' || CASE WHEN "natural" IN ('wood', 'peak', 'volcano', 'saddle', 'cave_entrance', 'water', 'mud', 'wetland', 'marsh', 'bay', 'spring', 
                                                         'scree', 'shingle', 'bare_rock', 'sand', 'heath', 'grassland', 'scrub', 'beach', 'glacier', 'tree') 
@@ -2182,7 +2164,7 @@
                   OR leisure IS NOT NULL
                   OR landuse IN ('reservoir', 'basin', 'recreation_ground', 'village_green', 'quarry', 'vineyard', 'orchard', 'cemetery', 'residential', 
                                  'garages', 'meadow', 'grass', 'allotments', 'forest', 'farmyard', 'farm', 'farmland', 'greenhouse_horticulture', 
-                                 'retail', 'industrial', 'railway', 'commercial', 'brownfield', 'landfill', 'construction', 'military')
+                                 'retail', 'industrial', 'railway', 'commercial', 'brownfield', 'landfill', 'military')
                   OR man_made IN ('lighthouse', 'windmill', 'mast', 'water_tower', 'cross', 'obelisk')
                   OR "natural" IS NOT NULL
                   OR place IN ('island', 'islet')
--- a/roads.mss
+++ b/roads.mss
@@ -782,7 +782,7 @@
     }
 
     [feature = 'railway_disused'][zoom >= 15],
-    [feature = 'railway_construction'],
+    // [feature = 'railway_construction'],
     [feature = 'railway_miniature'][zoom >= 15],
     [feature = 'railway_INT-preserved-ssy'][zoom >= 14] {
       .bridges-casing {
@@ -1067,6 +1067,7 @@
      * https://github.com/mapbox/carto/issues/235
      * https://github.com/mapbox/carto/issues/237
      */
+    /*
     [feature = 'highway_construction'] {
       [zoom >= 12] {
         line-width: 2;
@@ -1142,6 +1143,7 @@
         }
       }
     }
+    */
 
     [feature = 'highway_motorway'] {
       [zoom >= 5] {
@@ -1975,6 +1977,7 @@
       }
     }
 
+    /*
     [feature = 'railway_construction'] {
       [zoom >= 13] {
         line-color: grey;
@@ -1990,6 +1993,7 @@
         }
       }
     }
+    */
 
     [feature = 'railway_disused'] {
       [zoom >= 15] {
@@ -2801,6 +2805,7 @@
       text-size: 12;
     }
   }
+  /*
   [highway = 'construction'] {
     [int_construction_minor = 'no'][zoom >= 13],
     [int_construction_minor = 'yes'][zoom >= 14] {
@@ -2821,6 +2826,7 @@
       }
     }
   }
+  */
   [highway = 'residential'],
   [highway = 'unclassified'],
   [highway = 'road'] {
